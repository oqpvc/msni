#!/usr/bin/env ruby
# coding: utf-8

require 'open-uri'
require 'bibtex'

$BIB_ROOT = Dir.open(File.join(Dir.home, 'bib', 'msni'))

class BibTeX::Entry
  def camel_case_title
    authors = self.names.map do |n|
      n.sub(/,.*/, '').gsub('{\"a}', 'ä').gsub('{\"A}', 'Ä').gsub('{\"o}', 'ö').gsub('{\"O}', 'Ö').gsub('{\"u}', 'ü').gsub('{\"U}', 'Ü').gsub(/[^a-zA-Z0-9äöüÄÖÜ]/, '')
    end
    authors = authors.join(',')
    title = self.title.to_s.gsub(/\\[^\s{]*/,'').split(' ').map { |w| w.gsub(/[^a-zA-Z0-9]/, '').capitalize }.join('')

    return "#{authors}-#{title}"
  end
end

class MathSciNet
  attr_reader :id, :bibtex

  def initialize(id)
    if /^\d+$/=~ id
      @id = id
    elsif /^MR\d+$/ =~ id
      @id = id.sub('MR', '')
    else
      raise ArgumentError, "not a valid MR-ID"
    end
    fetch_data
  end

  def fetch_data
    if @bibtex.nil?
      @bibtex = BibTeX.parse(open("http://www.ams.org/mathscinet/search/publications.html?fmt=bibtex&pg1=MR&s1=#{@id}").read.sub(/.*<pre>/m,'').sub(/<\/pre>.*/m, '').sub(/\@preamble\{.*?\}/m, '')).first
    else
      raise "Already have data"
    end
  end

  def camel_case_title
    @bibtex.camel_case_title
  end
end


mr = MathSciNet.new(ARGV[0])
dir = File.join($BIB_ROOT, mr.camel_case_title)
Dir.mkdir(dir) unless Dir.exists?(dir)

File.open(File.join(dir, 'MR' + mr.id + '.bib' ), 'w') do |f|
  f.puts mr.bibtex
  f.puts "\n\n"
end


`qutebrowser -s 'downloads.location.directory' '#{dir}' -s 'downloads.location.prompt' 'false' http://www.ams.org/mathscinet-getitem?mr=#{mr.id}`
`urxvt -cd #{dir} &`

# we can't use mode 'a' for network file systems, it seems
complete = File.join($BIB_ROOT, 'complete.bib')
content = File.read(complete) + mr.bibtex.to_s + "\n\n"

File.open(complete, 'w') do |f|
  f.puts content
end
